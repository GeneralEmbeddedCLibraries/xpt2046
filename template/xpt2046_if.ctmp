////////////////////////////////////////////////////////////////////////////////
/**
*@file      xpt2046_if.h
*@brief     Interface with XPT2046 chip
*@author    Ziga Miklosic
*@date      04.07.2021
*@version	V1.0.0
*/
////////////////////////////////////////////////////////////////////////////////
/**
*@addtogroup XPT2046_IF
* @{ <!-- BEGIN GROUP -->
*
* 	Platform dependent interface with XPT2046 chip.
*
* 	Put code that is platform depended inside code block start with
* 	"USER_CODE_BEGIN" and with end of "USER_CODE_END".
*/
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Includes
////////////////////////////////////////////////////////////////////////////////
#include "xpt2046_if.h"

// USER INCLUDES BEGIN...

#include "drivers/peripheral/gpio/gpio.h"

// USER INCLUDES END...

////////////////////////////////////////////////////////////////////////////////
// Definitions
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Variables
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Function prototypes
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Functions
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
/**
*		Initialize low level interface
*
* @note	User shall provide definition of that function based on used platform!
*
* @return 		status - Status of initialization
*/
////////////////////////////////////////////////////////////////////////////////
xpt2046_status_t xpt2046_if_init(void)
{
	xpt2046_status_t status = eXPT2046_OK;

	// USER CODE BEGIN...

	// Left empty as periphery is initilize elswhere...

	// USER CODE END...

	return status;
}

////////////////////////////////////////////////////////////////////////////////
/**
*		Exchange data via SPI
*
* @note	User shall provide definition of that function based on used platform!
*
* @param[in]	p_tx		- Pointer to transmit data
* @param[out]	p_rx		- Pointer to receive data
* @param[in]	size		- Size of exchange packet
* @param[in]	cs_action	- Action of CS line
* @return 		status 		- Status of operation
*/
////////////////////////////////////////////////////////////////////////////////
xpt2046_status_t xpt2046_if_transmit_receive(const uint8_t * p_tx, uint8_t * const p_rx, const uint32_t size, const spi_cs_action_t cs_action)
{
	xpt2046_status_t status = eXPT2046_OK;

	// USER CODE BEGIN...

	if ( eSPI_OK != spi_2_transmit_receive( eSPI2_CH_TOUCH, (uint8_t*) p_tx, (uint8_t*) p_rx, size, ( eSPI_CS_LOW_ON_ENTRY | eSPI_CS_HIGH_ON_EXIT )))
	{
		status = eXPT2046_ERROR;
	}

	// USER CODE END...

	return status;
}

////////////////////////////////////////////////////////////////////////////////
/**
*		Get state of IRQ touch line
*
* @note	User shall provide definition of that function based on used platform!
*
* @return 	int_state - True if touch detected
*/
////////////////////////////////////////////////////////////////////////////////
bool xpt2046_if_get_int(void)
{
	bool touch_int = false;

	// USER CODE BEGIN...

	// NOTE: HW inverter used!
	if ( eGPIO_HIGH == gpio_get( eGPIO_T_IRQ ))
	{
		touch_int = true;
	}

	// USER CODE END...

	return touch_int;
}

////////////////////////////////////////////////////////////////////////////////
/**
* @} <!-- END GROUP -->
*/
////////////////////////////////////////////////////////////////////////////////

